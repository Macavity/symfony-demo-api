security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    providers:
        in_memory:
            memory:
                users:
                    basic:
                        password: basic
                        roles: 'ROLE_USER'
                    more:
                        password: more
                        roles: 'ROLE_ADMIN'

    role_hierarchy:
        ROLE_ADMIN:     ROLE_USER

    firewalls:
        login:
            pattern: ^/api/1/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/1/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            http_basic: ~
            logout:
                path:   /logout
                target: /
            pattern: /api
            provider: in_memory

#        api:
#            pattern: ^/api
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/\d+/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }